SUBROUTINE sub_source_elasto_acoustic_localisation
      Use m_mesh
      Use m_gen
      Use m_source
      implicit none
      real*8,save :: coord_s(2),a(3,2),coord_s_ref(2)
      integer :: I

!      x_source=0
 !     y_source=0.9

      allocate(ValPhisource(Nphi,1))
      coord_s(1)=x0
      coord_s(2)=y0
      DO I=1,Ntri
         a=Coor(Tri(I,:),:)
         call sub_transform(a,coord_s,coord_s_ref)
         IF ((coord_s_ref(1).ge.0.d0).and.(coord_s_ref(2).ge.0.d0).and.(coord_s_ref(1)+coord_s_ref(2).le.1D0)) then
            write(6,*)'coucou'
            Isource=I
	    SELECT CASE(ORDER)
            CASE(1)
               CALL Phi2DOrder1(coord_s_ref(1),coord_s_ref(2),1,ValPhisource)     
	    CASE(2)
               CALL Phi2DOrder2(coord_s_ref(1),coord_s_ref(2),1,ValPhisource)     
            CASE(3)
               CALL Phi2DOrder3(coord_s_ref(1),coord_s_ref(2),1,ValPhisource)     

            END SELECT
            !write(6,*)'valphisource',ValPhisource
            return
         END IF
      ENDDO
    END SUBROUTINE sub_source_elasto_acoustic_localisation
